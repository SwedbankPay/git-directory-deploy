name: Test

on: [push, pull_request]

jobs:
  id:
    name: ID
    runs-on: ubuntu-latest
    outputs:
      sha8: ${{ steps.id.outputs.sha8 }}
    steps:
    - name: Generate ID
      id: id
      env:
        GIT_SHA: ${{ github.sha }}
      run: |
        SHA8=$(echo ${GIT_SHA} | cut -c1-8)
        echo "Sha: ${SHA8}"
        echo "::set-output name=sha8::${SHA8}"

  bats:
    name: BATS
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install BATS
      run: sudo npm install -g bats

    - name: Run BATS test
      run: bats . lib

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Shellcheck
      uses: reviewdog/action-shellcheck@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        level: style

  deploy:
    name: Deploy
    needs: id
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create site folder
      run: mkdir -p _site

    - uses: docker://pandoc/core:2.9
      name: Pandoc Convert
      with:
        args: --from=markdown --to=html5 --output=_site/index.html readme.md
    
    - name: Deploy
      env:
        GIT_DEPLOY_DIR: _site
        GIT_DEPLOY_BRANCH: ${{ needs.id.outputs.sha8 }}
        GIT_DEPLOY_REPO: https://${{ secrets.GITHUB_TOKEN}}@github.com/${{ github.repository }}.git
      run: ./deploy.sh

    - name: Verify deployment
      env:
        SHA8: ${{ needs.id.outputs.sha8 }}
      run: |
        git checkout ${SHA8}
        ls -la
        if [[ ! -f index.html ]]; then
            echo 'index.html missing. Aborting.'
            exit 1
        fi

    - name: Cleanup
      if: always()
      env:
        SHA8: ${{ needs.id.outputs.sha8 }}
      run: |
          if git show-ref --verify --quiet refs/heads/${SHA8}; then
              echo "Branch '${SHA8}' found. Deleting"
              git branch -d ${SHA8}
          fi
  
