name: Test

on: [push, pull_request]

jobs:
  id:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.id.outputs.id }}
    steps:
      - id: id
        run: |
          ID="r${{ github.run_id }}-${{ github.run_number }}"
          echo "ID: ${ID}"
          echo "::set-output name=id::${ID}"

  bats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install BATS
        run: sudo npm install -g bats

      - name: Run BATS test
        run: bats . lib

  shellcheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: info
          fail_on_error: true
          shellcheck_flags: --severity=style

  dry-run:
    needs: id
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create site folder
        run: mkdir -p _site

      - uses: docker://pandoc/core:2.9
        name: Pandoc Convert
        with:
          args: --from=markdown --to=html5 --output=_site/index.html readme.md

      - name: Deploy
        env:
          GIT_DEPLOY_DIR: _site
          GIT_DEPLOY_BRANCH: ${{ needs.id.outputs.id }}
          GIT_DEPLOY_REPO: https://${{ secrets.GITHUB_TOKEN}}@github.com/${{ github.repository }}.git
        run: ./deploy.sh --dry-run

      - name: Verify deployment
        run: .github/workflows/verify-deployment.sh --branch ${{ needs.id.outputs.id }} --verbose

      - name: Cleanup
        if: always()
        run: .github/workflows/cleanup.sh --branch ${{ needs.id.outputs.id }} --commit ${{ github.sha }} --verbose

  deploy:
    needs: id
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create site folder
        run: mkdir -p _site

      - uses: docker://pandoc/core:2.9
        name: Pandoc Convert
        with:
          args: --from=markdown --to=html5 --output=_site/index.html readme.md

      - name: Deploy
        env:
          GIT_DEPLOY_DIR: _site
          GIT_DEPLOY_BRANCH: ${{ needs.id.outputs.id }}
          GIT_DEPLOY_REPO: https://${{ secrets.GITHUB_TOKEN}}@github.com/${{ github.repository }}.git
        run: ./deploy.sh

      - name: Verify deployment
        run: .github/workflows/verify-deployment.sh --branch ${{ needs.id.outputs.id }} --remote --verbose

      - name: Cleanup
        if: always()
        run: .github/workflows/cleanup.sh --branch ${{ needs.id.outputs.id }} --commit ${{ github.sha }} --remote --verbose
